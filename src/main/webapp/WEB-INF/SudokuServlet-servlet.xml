<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	<!-- Activate to Spring MVC annotion like @RequestMapping or @Controller -->
	<mvc:annotation-driven />
	<!-- mvc:resoure tag is used to easy load for images or static content -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<!-- Spring will not aware of the @PostConstruct and @PreDestroy annotation. 
		To enable it, you have to either register ‘CommonAnnotationBeanPostProcessor‘ 
		or specify the ‘<context:annotation-config />‘ in bean configuration file, -->
	<bean
		class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
	<!-- JstlView dispatches the request to JSP, just like InternalResourceView. 
		But it also exposes JSTL-specific request attributes so that you can take 
		advantage of JSTL’s internationalization support. -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<context:component-scan base-package="org.games.sudoku" />
</beans>